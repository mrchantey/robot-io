{"version":3,"sources":["utility/event.js","ui/RobotHeading.js","systems/dataUtility.js","ui/fileUI.js","ui/App.js","systems/socketClient.js","systems/dataStore.js","systems/dataInputTest.js","factories/chartCreator.js","factories/entityCreators/entity.js","factories/entityCreators/vec3.js","factories/entityCreators/mpu.js","factories/dataEntityCreator.js","systems/dataEntityManager.js","systems/systems.js","index.js","ui/ui.js"],"names":["module","exports","listeners","addListener","listener","push","invoke","params","forEach","l","RobotHeading","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","now","Date","_this2","timerID","setInterval","tick","clearInterval","setState","react_default","a","createElement","Component","dataUtility","Download","data","name","undefined","dataStr","JSON","stringify","elt","document","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","UploadAsync","Promise","resolve","reject","addEventListener","event","input","target","reader","FileReader","onload","text","result","obj","parse","readAsText","files","FileUI","handleDataTest","e","isTesting","testText","window","systems","dataInputTest","begin","end","handleLoadDataRealtime","console","log","stopRealtime","realtimeText","isRealtime","DataUtility","then","dataStore","setDataRealtime","stopDataRealtime","setData","getData","onClick","handleSaveData","handleLoadData","App","className","ui_RobotHeading","isBuddy","fileUI","createSocketClient","debug","arguments","length","socketClient","socket","onData","Event","sendData","emit","io","on","_","err","dir","createDataStore","realtimeIntervalId","onReset","addData","newData","deleteData","nd","onCompleteCallback","startMillis","i","elapsedMillis","timeStamp","createDataInputTest","intervalID","ent","accX","accY","accZ","gyroX","gyroY","gyroZ","millis","getRandom","testData","mpu","acc","x","y","z","gyro","temp","max","Math","random","Plotly","require","createChart","groupData","traceDatas","autoUpdate","updateInterval","groupEl","el","getElementById","newPlot","layout","createGroup","traceDataBuffers","map","d","indicies","t","update","newTraceDatas","extendTraces","count","min","assign","xaxis","autorange","range","relayout","appendTraces","clearDataBuffers","arr","intervalId","traces","setTraces","createTraces","_traces","catch","error","resetTraces","keys","deleteTraces","appendTraceDataBuffers","xData","yData","_callee","_traceDatas","regenerator_default","wrap","_context","prev","next","validateTraceData","addTraces","reduce","groupIndex","indexOf","abrupt","stop","_traceData","traceData","concat","type","mode","line","width","uuidCount","shortName","create","_ent","circleAssign","title","showlegend","yaxis","chart","resetData","color","CreateChart","uuid","children","addChild","child","entCreator","accelerometer","vec3","gyroscope","mpuData","dataEntityTypes","createDataEntityManager","entities","warn","filter","k","entity","find","key","dataT","CreateDataEntity","DataStore","SocketClient","dataEntityManager","DataEntityManager","DataInputTest","Systems","ReactDOM","render","src_ui_App"],"mappings":"yEAMAA,EAAOC,QACP,WACI,IAAMC,EAAY,GAUlB,MAAO,CACHC,YALJ,SAAqBC,GACjBF,EAAUG,KAAKD,IAKfE,OAVJ,SAAgBC,GACZL,EAAUM,QAAQ,SAAAC,GAAC,OAAIA,EAAEF,ieC8BlBG,cAtCX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEC,IAAKC,KAAKD,OAFVR,mFAKC,IAAAU,EAAAP,KAChBA,KAAKQ,QAAUC,YAAY,WACvBF,EAAKG,QACN,kDAIHC,cAAcX,KAAKQ,wCAInBR,KAAKY,SAAS,CACVP,IAAKC,KAAKD,yCASd,OACIQ,EAAAC,EAAAC,cAAA,6BA5BeC,aCAZC,EAAA,CACXC,SAKJ,SAAkBC,GACd,IAAMC,OAAqBC,IAAdF,EAAKC,KAAqB,OAASD,EAAKC,KAC/CE,EAAUC,KAAKC,UAAUL,GACzBM,EAAMC,SAASX,cAAc,KACnCU,EAAIE,aAAa,OAAQ,uCAAyCC,mBAAmBN,IACrFG,EAAIE,aAAa,WAAYP,EAAO,SACpCK,EAAII,MAAMC,QAAU,OACpBJ,SAASK,KAAKC,YAAYP,GAC1BA,EAAIQ,QACJP,SAASK,KAAKG,YAAYT,IAb1BU,YAgBJ,WACI,OAAO,IAAIC,QAAQ,SAACC,EAASC,GACzB,IAAMb,EAAMC,SAASX,cAAc,SACnCU,EAAIE,aAAa,OAAQ,QACzBF,EAAIE,aAAa,SAAU,oBAC3BF,EAAIc,iBAAiB,SACrB,SAAkBC,GACd,IAAMC,EAAQD,EAAME,OACdC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACZ,IAAMC,EAAOH,EAAOI,OACdC,EAAMzB,KAAK0B,MAAMH,GACvBT,EAAQW,IAEZL,EAAOO,WAAWT,EAAMU,MAAM,MAElCzB,SAASK,KAAKC,YAAYP,GAC1BA,EAAIQ,QACJP,SAASK,KAAKG,YAAYT,WCgDnB2B,cAhFX,SAAAA,EAAYxD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,IACfvD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsD,GAAAjD,KAAAH,KAAMJ,KAkBVyD,eAAiB,SAACC,IAEe,IAAzBzD,EAAKO,MAAMmD,WACX1D,EAAKe,SAAS,CAAE4C,SAAU,gBAAiBD,WAAW,IACtDE,OAAOC,QAAQC,cAAcC,UAG7B/D,EAAKe,SAAS,CAAE4C,SAAU,kBAAmBD,WAAW,IACxDE,OAAOC,QAAQC,cAAcE,QA3BlBhE,EAsCnBiE,uBAAyB,SAACR,GACtBS,QAAQC,IAAI,yBAGZ,IAOMC,EAAe,WACjBpE,EAAKe,SAAS,CAAEsD,aAAc,sBAAuBC,YAAY,MAGvC,IAA1BtE,EAAKO,MAAM+D,YAVXtE,EAAKe,SAAS,CAAEsD,aAAc,oBAAqBC,YAAY,IAC/DC,EAAYjC,cAAckC,KAAK,SAAAlD,GAC3BsC,OAAOC,QAAQY,UAAUC,gBAAgBpD,EAAM8C,OAWnDA,IACAR,OAAOC,QAAQY,UAAUE,qBAtD7B3E,EAAKO,MAAQ,CACToD,SAAU,kBACVD,WAAW,EACXW,aAAc,sBACdC,YAAY,GAPDtE,6KAgCfkE,QAAQC,IAAI,gBACZI,EAAYjC,cAAckC,KAAK,SAAAlD,GAC3BsC,OAAOC,QAAQY,UAAUG,QAAQtD,8CA4BrC4C,QAAQC,IAAI,eACZ,IAAM7C,EAAOsC,OAAOC,QAAQY,UAAUI,UACtCN,EAAYlD,SAASC,oCAIrB,OACIN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UAAQ4D,QAAS3E,KAAK4E,gBAAtB,QACA/D,EAAAC,EAAAC,cAAA,UAAQ4D,QAAS3E,KAAK6E,gBAAtB,QACAhE,EAAAC,EAAAC,cAAA,UAAQ4D,QAAS3E,KAAK8D,wBAAyB9D,KAAKI,MAAM8D,cAC1DrD,EAAAC,EAAAC,cAAA,UAAQ4D,QAAS3E,KAAKqD,gBAAiBrD,KAAKI,MAAMoD,kBA5E7CxC,aCkBN8D,0LAdX,OACEjE,EAAAC,EAAAC,cAAA,OAAKgE,UAAU,OACblE,EAAAC,EAAAC,cAACiE,EAAD,CAAcC,QAAQ,YACtBpE,EAAAC,EAAAC,cAACmE,EAAD,cALUlE,+CCFHmE,EAIf,WAA2C,IAAfC,EAAeC,UAAAC,OAAA,QAAAjE,IAAAgE,UAAA,IAAAA,UAAA,GAEjCE,EAAe,CACjBC,YAAQnE,EACRoE,OAAQC,MACRC,SA0BJ,SAAkBxE,GACdoE,EAAaC,OAAOI,KAAK,OAAQzE,KAzBrC,IAII4C,QAAQC,IAAI,kCACZuB,EAAaC,OAASK,MACtBN,EAAaC,OAAOM,GAAG,UAAW,SAAAC,GAC9BhC,QAAQC,IAAI,uBAEhBuB,EAAaC,OAAOM,GAAG,OAAQ,SAAA3E,GAC3BoE,EAAaE,OAAOlG,OAAO4B,KAGnC,MAAO6E,GAEH,OADAjC,QAAQC,IAAIgC,GACLT,EAEPH,GACAG,EAAaE,OAAOrG,YAAY,SAAA+B,GAC5B4C,QAAQC,IAAI,mBACZD,QAAQkC,IAAI9E,KASpB,OAAOoE,GC1CIW,MAEf,WAEI,IAsBIC,EAtBEhF,EAAO,GACPsE,EAASC,MACTU,EAAUV,MAEhB,SAASW,EAAQC,GACbnF,EAAK7B,KAAKgH,GACVb,EAAOlG,OAAO+G,GAUlB,SAASC,IACLpF,EAAKmE,OAAS,EACdc,EAAQ7G,SAyBZ,SAASiF,IACL7D,cAAcwF,GAOlB,MAAO,CACHE,UACAZ,SACAW,UACA3B,QA9CJ,WAA+B,IAAd6B,EAAcjB,UAAAC,OAAA,QAAAjE,IAAAgE,UAAA,GAAAA,UAAA,GAAJ,GACvBkB,IACAH,EAAQ7G,SACR+G,EAAQ7G,QAAQ,SAAA+G,GAAE,OAAIH,EAAQG,MA4C9BD,aACAhC,gBAjCJ,WAA2D,IAAlC+B,EAAkCjB,UAAAC,OAAA,QAAAjE,IAAAgE,UAAA,GAAAA,UAAA,GAAxB,GAAIoB,EAAoBpB,UAAAC,OAAA,EAAAD,UAAA,QAAAhE,EACvDkF,IACAH,EAAQ7G,SACR,IAAMmH,EAAcpG,KAAKD,MACrBsG,EAAI,EAERR,EAAqB1F,YAAY,SAAAsF,GAE7B,IADA,IAAMa,EAAgBtG,KAAKD,MAAQqG,EAC5BC,EAAIL,EAAQhB,QAAUgB,EAAQK,GAAGE,UAAYD,GAChDP,EAAQC,EAAQK,IAChBA,IAEAA,GAAKL,EAAQhB,SACbd,IACAiC,MAEL,KAkBHjC,mBACAE,QAZJ,WACI,OAAOvD,KCnDA2F,MAIf,WACI,IAOIC,EAPEC,EAAM,CACRpD,MAOJ,WACIoD,EAAIZ,QAAQ7G,SAEZ,IAAImH,EAAcpG,KAAKD,MAEnB4G,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAQ,EACRC,EAAQ,EACRC,EAAQ,EAEZP,EAAatG,YAAY,SAAAsF,GACrB,IAAIwB,EAASjH,KAAKD,MAElB4G,GAAQO,IACRN,GAAQM,IACRL,GAAQK,IACRJ,GAASI,IACTH,GAASG,IACTF,GAASE,IAET,IAAMC,EAAW,CACbC,IACA,CACIC,IAAK,CAAEC,EAAGX,EAAMY,EAAGX,EAAMY,EAAGX,GAC5BY,KAAM,CAAEH,EAAGR,EAAOS,EAAGR,EAAOS,EAAGR,GAC/BU,KAAM,IAEVnB,UAAWU,EAASb,GAOxBM,EAAIvB,OAAOlG,OAAOkI,IACnB,KA3CH5D,IA8CJ,WACIlD,cAAcoG,IA9CdtB,OAAQC,MACRU,QAASV,OAgDb,SAAS8B,IAAuB,IAAbS,EAAa5C,UAAAC,OAAA,QAAAjE,IAAAgE,UAAA,GAAAA,UAAA,GAAP,IACrB,OAAO6C,KAAKC,SAAWF,EAAMA,EAAM,EAGvC,OAAOjB,gCChELoB,EAASC,EAAQ,IACRC,EAEf,SAAqBC,EAAWC,GAAoD,IAAxCC,IAAwCpD,UAAAC,OAAA,QAAAjE,IAAAgE,UAAA,KAAAA,UAAA,GAArBqD,EAAqBrD,UAAAC,OAAA,QAAAjE,IAAAgE,UAAA,GAAAA,UAAA,GAAJ,GAEtEsD,EAmEV,SAAqBJ,GACjB,IAAMK,EAAKlH,SAASX,cAAc,OAKlC,OAJAW,SAASmH,eAAe,aAAa7G,YAAY4G,GAEjDR,EAAOU,QAAQF,EAAI,GAAIL,EAAUQ,QAE1BH,EAzESI,CAAYT,GAGtBU,EAAmB,CACrBrB,EAAGY,EAAWU,IAAI,SAAAC,GAAC,MAAI,KACvBtB,EAAGW,EAAWU,IAAI,SAAAC,GAAC,MAAI,KACvBC,SAAUZ,EAAWU,IAAI,SAACG,EAAG1C,GAAJ,OAAUA,KAYvC,SAAS2C,KAsFb,SAAsBX,EAASY,GAC3BnB,EAAOoB,aAAab,EAAS,CAAEf,EAAG2B,EAAc3B,EAAGC,EAAG0B,EAAc1B,GAAK0B,EAAcH,UACvF,IAAMK,EAAQd,EAAQxH,KAAK,GAAGyG,EAAEtC,OAAS,EAEzC,GAAImE,EADuB,IACK,CAC5B,IAAMC,EAAMf,EAAQxH,KAAK,GAAGyG,EAAE6B,EAFP,KAGjBxB,EAAMU,EAAQxH,KAAK,GAAGyG,EAAE6B,GACxBV,EAAS,GACfjJ,OAAO6J,OAAOZ,EAAQJ,EAAQI,QAC9BjJ,OAAO6J,OAAOZ,EAAOa,MAAO,CAAEC,WAAW,EAAOC,MAAO,CAACJ,EAAKzB,KAC7DG,EAAO2B,SAASpB,EAASI,IA/FzBiB,CAAarB,EAASM,GACtBgB,IAGJ,SAASA,IACLhB,EAAiBrB,EAAEnI,QAAQ,SAAAyK,GAAG,OAAIA,EAAI5E,OAAS,IAC/C2D,EAAiBpB,EAAEpI,QAAQ,SAAAyK,GAAG,OAAIA,EAAI5E,OAAS,IAKnD,IAEI6E,EAFAC,EAAS,GAGb,SAASC,mDACLC,CAAa3B,EAASH,GACjBnE,KAAK,SAAAkG,GACFH,EAASG,EACTxG,QAAQC,IAAI,kBACRyE,QAA6BpH,IAAf8I,IACdA,EAAa1J,YAAY6I,EAAQZ,MAExC8B,MAAMzG,QAAQ0G,OAsBvB,OApBAJ,IAYc,CACV1B,UAEAyB,SACAM,YAdJ,WACIT,IAEA,IAAMb,EAAWtJ,OAAO6K,KAAKP,GAAQlB,IAAI,SAACG,EAAG1C,GAAJ,OAAUA,IACnDyB,EAAOwC,aAAajC,EAASS,GAC7BhB,EAAO2B,SAASpB,EAAS,CAAEiB,MAAO,CAAEC,WAAW,KAE/CQ,KAQAQ,uBAnDJ,SAAgCtB,GAE5BA,EAAc3B,EAAEnI,QAAQ,SAACqL,EAAOnE,GAAR,OAAcsC,EAAiBrB,EAAEjB,GAAGrH,KAAKwL,KACjEvB,EAAc1B,EAAEpI,QAAQ,SAACsL,EAAOpE,GAAR,OAAcsC,EAAiBpB,EAAElB,GAAGrH,KAAKyL,MAiDjEzB,sDAeR,SAAA0B,EAA4BrC,EAASsC,GAArC,IAAAzC,EAAA4B,EAAA,OAAAc,EAAApK,EAAAqK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACU9C,EAAayC,EAAY/B,IAAI,SAAAC,GAAC,OAAIoC,EAAkB5C,EAASQ,KADvEiC,EAAAE,KAAA,EAEUlD,EAAOoD,UAAU7C,EAASH,GAFpC,cAGU4B,EAASzB,EAAQxH,KAAKsK,OAAO,SAAC9D,EAAKwB,GAGrC,OAFAA,EAAEuC,WAAa/C,EAAQxH,KAAKwK,QAAQxC,GACpCxB,EAAIwB,EAAE/H,MAAQ+H,EACPxB,GACR,IAPPyD,EAAAQ,OAAA,SAQWxB,GARX,wBAAAgB,EAAAS,SAAAb,EAAAhL,gCAWA,SAASuL,EAAkB5C,EAASmD,GAChC,IAAMC,EAAY,CACd3K,KAAI,QAAA4K,OAAUrD,EAAQxH,KAAKmE,QAC3B2G,KAAM,YAENC,KAAM,QACNtE,EAAG,GACHC,EAAG,GACHsE,KAAM,CAEFC,MAAO,IAIf,OADAtM,OAAO6J,OAAOoC,EAAWD,GAClBC,uBCxGPM,EAAY,ECET,IAAIC,EAAY,OACZlL,EAAO,WAEX,SAASmL,EAAOC,GAEnB,IAAMxF,EAAMyF,IAAa,CACrBrL,OACAkL,YACA/D,UAAW,CACPQ,OAAQ,CACJ2D,MAAOtL,EACPuL,YAAY,EACZ/C,MAAO,CAAE8C,MAAO,YAChBE,MAAO,CAAEF,MAAO,WAIxBrG,QA2BJ,SAAiBlF,EAAM0F,GACnB,IAAM2B,EAAa,CACfZ,EAAG,CAACf,EAAWA,EAAWA,GAC1BgB,EAAG,CAAC1G,EAAKyG,EAAGzG,EAAK0G,EAAG1G,EAAK2G,IAE7B+E,EAAMhC,uBAAuBrC,IA/B7BsE,UAkCJ,WACID,EAAMnC,eAlCNlC,WAAY,CACR,CACIpH,KAAM,IACN+K,KAAM,CACFY,MAAO,iBAGf,CACI3L,KAAM,IACN+K,KAAM,CACFY,MAAO,iBAGf,CACI3L,KAAM,IACN+K,KAAM,CACFY,MAAO,mBAIpBP,GACHxF,EAAIuB,UAAUQ,OAAO2D,MAAQ1F,EAAI5F,KAEjC,IAAMyL,EAAQG,EAAYhG,EAAIuB,UAAWvB,EAAIwB,YAiB7C,OAHAxB,EAAI6F,MAAQA,EDxDT,SAAgBL,GACnB,IAAMS,EAAOZ,IAEPrF,EAAMyF,IAAa,CACrBQ,OACA7L,KAAM,UAAY6L,EAClBC,SAAU,GACVC,SAGJ,SAAkBC,GACdpG,EAAIkG,SAAS5N,KAAK8N,KAHnBZ,GAKH,OAAOxF,EC8CAqG,CAAkBrG,GC7DtB,IAAI5F,EAAO,WACPkL,EAAY,MAEhB,SAASC,IACZ,IAAMe,EAAgBC,EAAY,CAAEnM,KAAM,kBACpCoM,EAAYD,EAAY,CAAEnM,KAAM,cAWtC,MAAO,CACHA,OACAkL,YACAgB,gBACAE,YACAnH,QAfJ,SAAiBoH,EAAS5G,GAEtByG,EAAcjH,QAAQoH,EAAQ9F,IAAKd,GACnC2G,EAAUnH,QAAQoH,EAAQ1F,KAAMlB,IAahCiG,UAXJ,WACIQ,EAAcR,YACdU,EAAUV,cCVlB,IAAMY,EAAkB,CACpBhG,EACA6F,GCLWI,MAGf,WAEI,IAAMC,EAAW,GAkCjB,MAhCgB,CACZA,WACAvH,QAKJ,SAAiBlF,GAIb,QAAuBE,IAAnBF,EAAK0F,UAEL,YADA9C,QAAQ8J,KAAK,sBAIjB/N,OAAO6K,KAAKxJ,GACP2M,OAAO,SAAAC,GAAC,MAAU,cAANA,IACZtO,QAAQ,SAAAsO,GAEL,IAAIC,EAASJ,EAASK,KAAK,SAAAjH,GAAG,OAAIA,EAAIsF,YAAcyB,SACrC1M,IAAX2M,IACAA,EDnBL,SAA0BE,EAAK/M,GAE1C,IAAMgN,EAAQT,EAAgBO,KAAK,SAAA5E,GAAC,OAAIA,EAAEiD,YAAc4B,IACxD,QAAc7M,IAAV8M,EAGA,OAAOA,EAAM5B,OAAOpL,GAFpB4C,QAAQ8J,KAAR,6BAAA7B,OAA0CkC,ICerBE,CAAiBL,EAAG5M,EAAK4M,IAClCH,EAAStO,KAAK0O,IAElBA,EAAO3H,QAAQlF,EAAK4M,GAAI5M,EAAK0F,cAtBrCiG,UA0BJ,WACIc,EAASnO,QAAQ,SAAA6D,GAAC,OAAIA,EAAEwJ,kBC5BhC,WACI,IAAMxI,EAAY+J,IACZ9I,EAAe+I,IACfC,EAAoBC,IAC1BlK,EAAUmB,OAAOrG,YAAYmP,EAAkBlI,SAC/C/B,EAAU8B,QAAQhH,YAAYmP,EAAkBzB,WAChDvH,EAAaE,OAAOrG,YAAYkF,EAAU+B,SAC1Cd,EAAaE,OAAOrG,YAAYmP,EAAkBlI,SAClD,IAAM1C,EAAgB8K,IACtB9K,EAAc8B,OAAOrG,YAAYkF,EAAU+B,SAC3C1C,EAAc8B,OAAOrG,YAAYmP,EAAkBlI,SACnD1C,EAAcyC,QAAQhH,YAAYkF,EAAUiC,YAE5C,IAAM7C,EAAU,CACZ6K,oBACA5K,gBACA4B,eACAjB,aAEJb,OAAOC,QAAUA,EC1BLgL,GCEIC,IAASC,OAAO/N,EAAAC,EAAAC,cAAC8N,EAAD,MAASnN,SAASmH,eAAe","file":"static/js/main.4e6729ea.chunk.js","sourcesContent":["\r\n\r\n\r\n// if (require === undefined)\r\n// export default createEvent\r\n// else\r\nmodule.exports = createEvent\r\nfunction createEvent() {\r\n    const listeners = []\r\n\r\n    function invoke(params) {\r\n        listeners.forEach(l => l(params))\r\n    }\r\n\r\n    function addListener(listener) {\r\n        listeners.push(listener)\r\n    }\r\n\r\n    return {\r\n        addListener,\r\n        invoke\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\n\r\nclass RobotHeading extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { now: Date.now() }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(() => {\r\n            this.tick()\r\n        }, 0);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID)\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            now: Date.now()\r\n        })\r\n        // this.state.now = Date.now()\r\n    }\r\n\r\n    render() {\r\n        // let time = Date.now()\r\n        // console.dir(this);\r\n\r\n        return (\r\n            <h1>Robot IO</h1>\r\n            // <div className=\"robot-heading\">\r\n            // {`Robot IO, time is ${this.state.now}`}\r\n            // </div >\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default RobotHeading","\r\n\r\nexport default {\r\n    Download,\r\n    UploadAsync\r\n}\r\n\r\n\r\nfunction Download(data) {\r\n    const name = data.name === undefined ? \"data\" : data.name\r\n    const dataStr = JSON.stringify(data)\r\n    const elt = document.createElement('a')\r\n    elt.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr))\r\n    elt.setAttribute('download', name + '.json')\r\n    elt.style.display = 'none'\r\n    document.body.appendChild(elt)\r\n    elt.click()\r\n    document.body.removeChild(elt)\r\n}\r\n\r\nfunction UploadAsync() {\r\n    return new Promise((resolve, reject) => {\r\n        const elt = document.createElement('input')\r\n        elt.setAttribute('type', 'file')\r\n        elt.setAttribute('accept', 'application/json')\r\n        elt.addEventListener('change', OpenFile)\r\n        function OpenFile(event) {\r\n            const input = event.target\r\n            const reader = new FileReader()\r\n            reader.onload = function () {\r\n                const text = reader.result\r\n                const obj = JSON.parse(text)\r\n                resolve(obj)\r\n            }\r\n            reader.readAsText(input.files[0])\r\n        }\r\n        document.body.appendChild(elt)\r\n        elt.click()\r\n        document.body.removeChild(elt)\r\n    })\r\n}\r\n","import React, { Component } from 'react';\r\nimport DataUtility from '../systems/dataUtility'\r\n\r\n\r\nclass FileUI extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            testText: \"Begin Data Test\",\r\n            isTesting: false,\r\n            realtimeText: \"Begin Realtime Load\",\r\n            isRealtime: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    handleDataTest = (e) => {\r\n\r\n        if (this.state.isTesting === false) {\r\n            this.setState({ testText: \"End Data Test\", isTesting: true })\r\n            window.systems.dataInputTest.begin()\r\n\r\n        } else {\r\n            this.setState({ testText: \"Begin Data Test\", isTesting: false })\r\n            window.systems.dataInputTest.end()\r\n        }\r\n    }\r\n\r\n    handleLoadData() {\r\n        console.log('loading data');\r\n        DataUtility.UploadAsync().then(data => {\r\n            window.systems.dataStore.setData(data)\r\n        })\r\n    }\r\n\r\n    handleLoadDataRealtime = (e) => {\r\n        console.log('loading data realtime');\r\n\r\n\r\n        const startRealtime = () => {\r\n            this.setState({ realtimeText: \"End Realtime Load\", isRealtime: true })\r\n            DataUtility.UploadAsync().then(data => {\r\n                window.systems.dataStore.setDataRealtime(data, stopRealtime)\r\n            })\r\n\r\n        }\r\n        const stopRealtime = () => {\r\n            this.setState({ realtimeText: \"Begin Realtime Load\", isRealtime: false })\r\n        }\r\n\r\n        if (this.state.isRealtime === false) {\r\n            startRealtime()\r\n        } else {\r\n            stopRealtime()\r\n            window.systems.dataStore.stopDataRealtime()\r\n        }\r\n    }\r\n\r\n    handleSaveData() {\r\n        console.log('saving data');\r\n        const data = window.systems.dataStore.getData()\r\n        DataUtility.Download(data)\r\n        // console.log();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>File</h2>\r\n                <button onClick={this.handleSaveData}>Save</button>\r\n                <button onClick={this.handleLoadData}>Load</button>\r\n                <button onClick={this.handleLoadDataRealtime}>{this.state.realtimeText}</button>\r\n                <button onClick={this.handleDataTest}>{this.state.testText}</button>\r\n            </div>)\r\n    }\r\n\r\n}\r\n\r\nexport default FileUI","import React, { Component } from 'react';\nimport RobotHeading from './RobotHeading'\nimport FileUI from './fileUI';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <RobotHeading isBuddy=\"yeababy\" />\n        <FileUI />\n        {/* <header className=\"App-header\">\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n        </header> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import Event from '../utility/event';\r\nimport io from 'socket.io-client';\r\n// module.exports = createSocketClient\r\n\r\nexport default createSocketClient\r\n\r\n\r\n\r\nfunction createSocketClient(debug = false) {\r\n\r\n    const socketClient = {\r\n        socket: undefined,\r\n        onData: Event(),\r\n        sendData,\r\n    }\r\n    try {\r\n\r\n        //untested!\r\n        // if (window.io !== undefined) {\r\n        console.log('connecting to socket server...');\r\n        socketClient.socket = io()\r\n        socketClient.socket.on('connect', _ => {\r\n            console.log('socket connected!');\r\n        })\r\n        socketClient.socket.on(\"data\", data => {\r\n            socketClient.onData.invoke(data)\r\n        })\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n        return socketClient\r\n    }\r\n    if (debug) {\r\n        socketClient.onData.addListener(data => {\r\n            console.log('data received..');\r\n            console.dir(data);\r\n        })\r\n    }\r\n\r\n    function sendData(data) {\r\n        socketClient.socket.emit(\"data\", data)\r\n    }\r\n\r\n\r\n    return socketClient\r\n}\r\n\r\n","import Event from '../utility/event';\r\n\r\nexport default createDataStore\r\n\r\nfunction createDataStore() {\r\n\r\n    const data = []\r\n    const onData = Event()\r\n    const onReset = Event()\r\n\r\n    function addData(newData) {\r\n        data.push(newData)\r\n        onData.invoke(newData)\r\n    }\r\n\r\n    function setData(newData = []) {\r\n        deleteData()\r\n        onReset.invoke()\r\n        newData.forEach(nd => addData(nd))\r\n        // newData.forEach(nd => data.push(nd))\r\n    }\r\n\r\n    function deleteData() {\r\n        data.length = 0\r\n        onReset.invoke()\r\n\r\n    }\r\n\r\n    let realtimeIntervalId\r\n\r\n    function setDataRealtime(newData = [], onCompleteCallback) {\r\n        deleteData()\r\n        onReset.invoke()\r\n        const startMillis = Date.now()\r\n        let i = 0;\r\n\r\n        realtimeIntervalId = setInterval(_ => {\r\n            const elapsedMillis = Date.now() - startMillis\r\n            while (i < newData.length && newData[i].timeStamp < elapsedMillis) {\r\n                addData(newData[i])\r\n                i++\r\n            }\r\n            if (i >= newData.length) {\r\n                stopDataRealtime()\r\n                onCompleteCallback()\r\n            }\r\n        }, 10)\r\n    }\r\n\r\n    function stopDataRealtime() {\r\n        clearInterval(realtimeIntervalId)\r\n    }\r\n\r\n    function getData() {\r\n        return data\r\n    }\r\n\r\n    return {\r\n        addData,\r\n        onData,\r\n        onReset,\r\n        setData,\r\n        deleteData,\r\n        setDataRealtime,\r\n        stopDataRealtime,\r\n        getData\r\n    }\r\n}\r\n","import Event from '../utility/event';\r\n\r\n\r\nexport default createDataInputTest\r\n\r\n\r\n\r\nfunction createDataInputTest() {\r\n    const ent = {\r\n        begin,\r\n        end,\r\n        onData: Event(),\r\n        onReset: Event()\r\n    }\r\n\r\n    let intervalID;\r\n    function begin() {\r\n        ent.onReset.invoke()\r\n        // let lastMillis = Date.now()\r\n        let startMillis = Date.now()\r\n\r\n        let accX = 0\r\n        let accY = 0\r\n        let accZ = 0\r\n        let gyroX = 0\r\n        let gyroY = 0\r\n        let gyroZ = 0\r\n\r\n        intervalID = setInterval(_ => {\r\n            let millis = Date.now()\r\n\r\n            accX += getRandom()\r\n            accY += getRandom()\r\n            accZ += getRandom()\r\n            gyroX += getRandom()\r\n            gyroY += getRandom()\r\n            gyroZ += getRandom()\r\n\r\n            const testData = {\r\n                mpu:\r\n                {\r\n                    acc: { x: accX, y: accY, z: accZ },\r\n                    gyro: { x: gyroX, y: gyroY, z: gyroZ },\r\n                    temp: 25\r\n                },\r\n                timeStamp: millis - startMillis\r\n            }\r\n            // let deltaMillis = millis - lastMillis\r\n            // lastMillis = millis\r\n            // testData.timeStamp += 1000\r\n            // console.log('making data callback');\r\n            // console.dir(testData);\r\n            ent.onData.invoke(testData)\r\n        }, 10);\r\n    }\r\n\r\n    function end() {\r\n        clearInterval(intervalID)\r\n    }\r\n\r\n    function getRandom(max = 10000) {\r\n        return Math.random() * max - max / 2\r\n    }\r\n\r\n    return ent\r\n\r\n\r\n}\r\n\r\n","const Plotly = require('plotly.js-dist');\r\nexport default createChart\r\n\r\nfunction createChart(groupData, traceDatas, autoUpdate = true, updateInterval = 30) {\r\n\r\n    const groupEl = createGroup(groupData)\r\n\r\n    // console.dir(groupEl);\r\n    const traceDataBuffers = {\r\n        x: traceDatas.map(d => []),\r\n        y: traceDatas.map(d => []),\r\n        indicies: traceDatas.map((t, i) => i)\r\n    }\r\n\r\n    function appendTraceDataBuffers(newTraceDatas) {\r\n        // console.dir(traceDataBuffers);\r\n        newTraceDatas.x.forEach((xData, i) => traceDataBuffers.x[i].push(xData))\r\n        newTraceDatas.y.forEach((yData, i) => traceDataBuffers.y[i].push(yData))\r\n        // console.dir(traceDataBuffers);\r\n    }\r\n\r\n\r\n\r\n    function update() {\r\n        appendTraces(groupEl, traceDataBuffers)\r\n        clearDataBuffers()\r\n    }\r\n\r\n    function clearDataBuffers() {\r\n        traceDataBuffers.x.forEach(arr => arr.length = 0)\r\n        traceDataBuffers.y.forEach(arr => arr.length = 0)\r\n\r\n\r\n    }\r\n\r\n    let traces = []\r\n    // const traces = await createTraces(groupEl, traceDatas)\r\n    let intervalId;\r\n    function setTraces() {\r\n        createTraces(groupEl, traceDatas)\r\n            .then(_traces => {\r\n                traces = _traces\r\n                console.log('traces created');\r\n                if (autoUpdate && intervalId === undefined)\r\n                    intervalId = setInterval(update, updateInterval);\r\n            })\r\n            .catch(console.error)\r\n    }\r\n    setTraces()\r\n\r\n    function resetTraces() {\r\n        clearDataBuffers()\r\n        // console.log(traces);\r\n        const indicies = Object.keys(traces).map((t, i) => i)\r\n        Plotly.deleteTraces(groupEl, indicies)\r\n        Plotly.relayout(groupEl, { xaxis: { autorange: true } })\r\n        // traces.forEach((t, i) => Plotly.deleteTraces(groupEl, indicies))\r\n        setTraces()\r\n    }\r\n\r\n    const chart = {\r\n        groupEl,\r\n        //traces will initially be undefined\r\n        traces,\r\n        resetTraces,\r\n        appendTraceDataBuffers,\r\n        update\r\n    }\r\n    return chart\r\n}\r\n\r\n\r\nfunction createGroup(groupData) {\r\n    const el = document.createElement(\"div\")\r\n    document.getElementById('plot-root').appendChild(el)\r\n    // document.body.appendChild(el)\r\n    Plotly.newPlot(el, [], groupData.layout)\r\n    // dataGroups.push(el)\r\n    return el\r\n}\r\n\r\nasync function createTraces(groupEl, _traceDatas) {\r\n    const traceDatas = _traceDatas.map(d => validateTraceData(groupEl, d))\r\n    await Plotly.addTraces(groupEl, traceDatas)\r\n    const traces = groupEl.data.reduce((acc, d) => {\r\n        d.groupIndex = groupEl.data.indexOf(d)\r\n        acc[d.name] = d\r\n        return acc\r\n    }, {})\r\n    return traces\r\n}\r\n\r\nfunction validateTraceData(groupEl, _traceData) {\r\n    const traceData = {\r\n        name: `data ${groupEl.data.length}`,\r\n        type: 'scattergl',\r\n        // type: 'line',\r\n        mode: 'lines',\r\n        x: [],\r\n        y: [],\r\n        line: {\r\n            // color: 'rgb(219, 64, 82)',\r\n            width: 3\r\n        },\r\n    }\r\n    Object.assign(traceData, _traceData)\r\n    return traceData\r\n}\r\n\r\nfunction appendTraces(groupEl, newTraceDatas) {\r\n    Plotly.extendTraces(groupEl, { x: newTraceDatas.x, y: newTraceDatas.y }, newTraceDatas.indicies)\r\n    const count = groupEl.data[0].x.length - 1\r\n    const maxPointsDisplayed = 100\r\n    if (count > maxPointsDisplayed) {\r\n        const min = groupEl.data[0].x[count - maxPointsDisplayed]\r\n        const max = groupEl.data[0].x[count]\r\n        const layout = {}\r\n        Object.assign(layout, groupEl.layout)\r\n        Object.assign(layout.xaxis, { autorange: false, range: [min, max] })\r\n        Plotly.relayout(groupEl, layout)\r\n    }\r\n}","import circleAssign from 'circle-assign';\r\n\r\nlet uuidCount = 0\r\n\r\nexport function create(_ent) {\r\n    const uuid = uuidCount++\r\n\r\n    const ent = circleAssign({\r\n        uuid,\r\n        name: \"entity \" + uuid,\r\n        children: [],\r\n        addChild\r\n    }, _ent)\r\n\r\n    function addChild(child) {\r\n        ent.children.push(child)\r\n    }\r\n    return ent\r\n}","import CreateChart from '../chartCreator';\r\nimport * as entCreator from './entity'\r\nimport circleAssign from 'circle-assign';\r\n\r\nexport let shortName = \"vec3\"\r\nexport let name = \"Vector 3\"\r\n\r\nexport function create(_ent) {\r\n\r\n    const ent = circleAssign({\r\n        name,\r\n        shortName,\r\n        groupData: {\r\n            layout: {\r\n                title: name,\r\n                showlegend: true,\r\n                xaxis: { title: \"time (s)\" },\r\n                yaxis: { title: \"units\" },\r\n                // plot_bgcolor: '#1E1E1E',\r\n            }\r\n        },\r\n        addData,\r\n        resetData,\r\n        traceDatas: [\r\n            {\r\n                name: \"x\",\r\n                line: {\r\n                    color: 'rgb(255,0,0)'\r\n                }\r\n            },\r\n            {\r\n                name: \"y\",\r\n                line: {\r\n                    color: 'rgb(0,255,0)'\r\n                }\r\n            },\r\n            {\r\n                name: \"z\",\r\n                line: {\r\n                    color: 'rgb(0,0,255)'\r\n                }\r\n            }\r\n        ]\r\n    }, _ent)\r\n    ent.groupData.layout.title = ent.name\r\n\r\n    const chart = CreateChart(ent.groupData, ent.traceDatas)\r\n\r\n    function addData(data, timeStamp) {\r\n        const traceDatas = {\r\n            x: [timeStamp, timeStamp, timeStamp],\r\n            y: [data.x, data.y, data.z]\r\n        }\r\n        chart.appendTraceDataBuffers(traceDatas)\r\n    }\r\n\r\n    function resetData() {\r\n        chart.resetTraces()\r\n    }\r\n\r\n    ent.chart = chart\r\n\r\n\r\n    return entCreator.create(ent)\r\n}\r\n\r\n","import * as vec3 from './vec3';\r\n\r\nexport let name = \"MPU 6050\"\r\nexport let shortName = \"mpu\"\r\n\r\nexport function create() {\r\n    const accelerometer = vec3.create({ name: \"Accelerometer\" })\r\n    const gyroscope = vec3.create({ name: \"Gyroscope\" })\r\n    function addData(mpuData, timeStamp) {\r\n        // console.log(`data received at ${timeStamp}`);\r\n        accelerometer.addData(mpuData.acc, timeStamp)\r\n        gyroscope.addData(mpuData.gyro, timeStamp)\r\n    }\r\n    function resetData() {\r\n        accelerometer.resetData()\r\n        gyroscope.resetData()\r\n    }\r\n\r\n    return {\r\n        name,\r\n        shortName,\r\n        accelerometer,\r\n        gyroscope,\r\n        addData,\r\n        resetData\r\n    }\r\n}","import * as mpu from './entityCreators/mpu';\r\nimport * as vec3 from './entityCreators/vec3';\r\n// import * as acc from './entityCreators/accelerometerEntityCreator';\r\n// import * as gyro from './entityCreators/gyroscopeEntityCreator';\r\n\r\nconst dataEntityTypes = [\r\n    mpu,\r\n    vec3,\r\n    // acc,\r\n    // gyro\r\n]\r\n\r\nexport default function createDataEntity(key, data) {\r\n\r\n    const dataT = dataEntityTypes.find(t => t.shortName === key)\r\n    if (dataT === undefined) {\r\n        console.warn(`unknown data entity type: ${key}`);\r\n    } else {\r\n        return dataT.create(data)\r\n    }\r\n    // return\r\n}","import CreateDataEntity from '../factories/dataEntityCreator';\r\n\r\nexport default createDataEntityManager\r\n\r\n\r\nfunction createDataEntityManager() {\r\n\r\n    const entities = []\r\n\r\n    const manager = {\r\n        entities,\r\n        addData,\r\n        resetData\r\n    }\r\n\r\n\r\n    function addData(data) {\r\n        // console.log(data);\r\n        // console.log(`data received`);\r\n        // console.dir(data);\r\n        if (data.timeStamp === undefined) {\r\n            console.warn('no timestamp found');\r\n            return\r\n        }\r\n\r\n        Object.keys(data)\r\n            .filter(k => k !== 'timeStamp')\r\n            .forEach(k => {\r\n                // if (data.uuid === undefined) data.uuid = 0\r\n                let entity = entities.find(ent => ent.shortName === k)\r\n                if (entity === undefined) {\r\n                    entity = CreateDataEntity(k, data[k])\r\n                    entities.push(entity)\r\n                }\r\n                entity.addData(data[k], data.timeStamp)\r\n            })\r\n    }\r\n\r\n    function resetData() {\r\n        entities.forEach(e => e.resetData())\r\n    }\r\n    return manager\r\n}","// const SocketClient = require('./socketClient');\r\n// const DataParser = require('./dataParser');\r\nimport SocketClient from './socketClient';\r\nimport DataStore from './dataStore';\r\nimport DataInputTest from './dataInputTest';\r\n\r\n// module.exports = createRobotIOClient\r\nimport DataEntityManager from './dataEntityManager';\r\nexport default createSystems\r\n\r\n\r\nfunction createSystems() {\r\n    const dataStore = DataStore()\r\n    const socketClient = SocketClient()\r\n    const dataEntityManager = DataEntityManager()\r\n    dataStore.onData.addListener(dataEntityManager.addData)\r\n    dataStore.onReset.addListener(dataEntityManager.resetData)\r\n    socketClient.onData.addListener(dataStore.addData)\r\n    socketClient.onData.addListener(dataEntityManager.addData)\r\n    const dataInputTest = DataInputTest()\r\n    dataInputTest.onData.addListener(dataStore.addData)\r\n    dataInputTest.onData.addListener(dataEntityManager.addData)\r\n    dataInputTest.onReset.addListener(dataStore.deleteData)\r\n\r\n    const systems = {\r\n        dataEntityManager,\r\n        dataInputTest,\r\n        socketClient,\r\n        dataStore\r\n    }\r\n    window.systems = systems\r\n\r\n    return systems\r\n}\r\n","import UI from './ui/ui';\r\nimport Systems from './systems/systems';\r\n// import DataEntityManager from './systems/dataEntityManager';\r\n\r\nconst systems = Systems()\r\n// systems.dataInputTest.begin()\r\n\r\n// const mng = DataEntityManager()\r\n// systems.dataEntityManager.addData({ mpu: { acc: { x: 0, y: 0, z: 0 }, gyro: { x: 0, y: 0, z: 0 } }, timeStamp: 0 })\r\n// systems.dataEntityManager.addData({ mpu: { acc: { x: 10, y: 0, z: 0 }, gyro: { x: 0, y: 0, z: 0 } }, timeStamp: 10 })\r\n// mng.parseData({ mpu: {}, timeStamp: 0 })\r\nUI()\r\n// mpu.create()\r\n// create({ name: \"bobby\" })\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nexport default _ => ReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}